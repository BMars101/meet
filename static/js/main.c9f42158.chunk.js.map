{"version":3,"sources":["Event.js","EventList.js","CitySearch.js","NumberOfEvents.js","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","active","handleToggleDetails","setState","event","this","props","className","summary","start","dateTime","location","href","htmlLink","description","onClick","Component","EventList","events","map","id","CitySearch","query","suggestions","showSuggestions","undefined","handleInputChanged","value","target","locations","filter","toUpperCase","indexOf","handleItemClicked","suggestion","updateEvents","type","placeholder","onChange","onFocus","style","display","NumberOfEvents","numOfEvents","handleChange","mockData","extractLocations","Set","checkToken","accessToken","a","fetch","then","res","json","catch","error","result","getEvents","NProgress","window","startsWith","done","getAccessToken","token","removeQuery","url","axios","get","data","localStorage","setItem","JSON","stringify","history","pushState","pathname","newurl","protocol","host","getToken","code","encodeCode","encodeURIComponent","access_token","getItem","tokenCheck","removeItem","searchParams","URLSearchParams","search","results","authUrl","App","numberOfEvents","selectedLocation","eventCount","filterEvents","slice","mounted","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"iQAoCeA,E,4MAhCbC,MAAQ,CACNC,QAAQ,G,EAGVC,oBAAsB,YACK,IAAtB,EAAKF,MAAMC,OACZ,EAAKE,SAAS,CAAEF,QAAQ,IAExB,EAAKE,SAAS,CAAEF,QAAQ,K,4CAI5B,WAAS,IAAD,OACDG,EAAUC,KAAKC,MAAfF,MACH,OACE,sBAAKG,UAAU,qBAAf,UACE,oBAAIA,UAAU,gBAAd,SAA+BH,EAAMI,UACrC,6BAAKJ,EAAMK,MAAMC,WACjB,4BAAIN,EAAMO,WAEXN,KAAKL,MAAMC,QACV,sBAAKM,UAAU,gBAAf,UACE,+CACA,mBAAGK,KAAMR,EAAMS,SAAf,4CACA,4BAAIT,EAAMU,iBAGZ,wBAAQP,UAAU,cAAcQ,QAAS,kBAAM,EAAKb,uBAApD,SAA4EG,KAAKL,MAAMC,OAAS,eAAiB,wB,GA5BvGe,aCeLC,E,4JAdb,WACE,IAAQC,EAAWb,KAAKC,MAAhBY,OACR,OACE,oBAAIX,UAAU,YAAd,SACGW,EAAOC,KAAI,SAAAf,GAAK,OACf,oBAAmBG,UAAU,WAA7B,SACE,cAAC,EAAD,CAAOH,MAAOA,KADPA,EAAMgB,a,GANDJ,aCoDTK,E,4MApDbrB,MAAQ,CACNsB,MAAO,GACPC,YAAa,GACbC,qBAAiBC,G,EAGnBC,mBAAqB,SAACtB,GACpB,IAAMuB,EAAQvB,EAAMwB,OAAOD,MACrBJ,EAAc,EAAKjB,MAAMuB,UAAUC,QAAO,SAAAnB,GAC9C,OAAOA,EAASoB,cAAcC,QAAQL,EAAMI,gBAAkB,KAEhE,EAAK5B,SAAS,CACZmB,MAAOK,EACPJ,iB,EAIJU,kBAAoB,SAACC,GACnB,EAAK/B,SAAS,CACZmB,MAAOY,EACPV,iBAAiB,IAGnB,EAAKlB,MAAM6B,aAAaD,I,4CAG1B,WAAS,IAAD,OACN,OACE,sBAAK3B,UAAU,aAAf,UACE,uBACE6B,KAAK,OACL7B,UAAU,OACV8B,YAAY,oBACZV,MAAOtB,KAAKL,MAAMsB,MAClBgB,SAAUjC,KAAKqB,mBACfa,QAAS,WAAQ,EAAKpC,SAAS,CAAEqB,iBAAiB,OAEpD,qBAAIjB,UAAU,cAAciC,MAAOnC,KAAKL,MAAMwB,gBAAkB,GAAK,CAAEiB,QAAS,QAAhF,UACGpC,KAAKL,MAAMuB,YAAYJ,KAAI,SAAAe,GAAU,OACpC,oBAEEnB,QAAS,kBAAM,EAAKkB,kBAAkBC,IAFxC,SAEsDA,GAD/CA,MAGT,oBAAcnB,QAAS,kBAAM,EAAKkB,kBAAkB,QAApD,SACE,gDADM,iB,GA5COjB,aC+BV0B,E,4MA9Bb1C,MAAQ,CACN2C,YAAa,GACbzB,OAAQ,I,EAGV0B,aAAe,SAACxC,GACd,IAAMuB,EAAQvB,EAAMwB,OAAOD,MAC3B,EAAKrB,MAAM6B,aAAa,KAAMR,GAC9B,EAAKxB,SAAS,CACZwC,YAAahB,K,4CAKjB,WACE,OACE,gCACE,qEACA,uBACES,KAAK,OACL7B,UAAU,mBACVoB,MAAOtB,KAAKL,MAAM2C,YAClBN,YAAY,iCACZC,SAAUjC,KAAKuC,sB,GAxBI5B,a,gECFvB6B,EAAW,CAEf,CACE,KAAQ,iBACR,KAAQ,qBACR,GAAM,8CACN,OAAU,YACV,SAAY,oJACZ,QAAW,2BACX,QAAW,2BACX,QAAW,mBACX,YAAe,uWACf,SAAY,aACZ,QAAW,CACV,MAAS,oCACT,MAAQ,GAET,UAAa,CACZ,MAAS,oCACT,MAAQ,GAET,MAAS,CACR,SAAY,4BACZ,SAAY,iBAEb,IAAO,CACN,SAAY,4BACZ,SAAY,iBAEb,iBAAoB,6BACpB,kBAAqB,CACpB,SAAY,4BACZ,SAAY,iBAEb,QAAW,wCACX,SAAY,EACZ,UAAa,CACZ,YAAc,GAEf,UAAa,WAEd,CACC,KAAQ,iBACR,KAAQ,qBACR,GAAM,8CACN,OAAU,YACV,SAAY,oJACZ,QAAW,2BACX,QAAW,2BACX,QAAW,eACX,YAAe,mSACf,SAAY,kBACZ,QAAW,CACV,MAAS,oCACT,MAAQ,GAET,UAAa,CACZ,MAAS,oCACT,MAAQ,GAET,MAAS,CACR,SAAY,4BACZ,SAAY,iBAEb,IAAO,CACN,SAAY,4BACZ,SAAY,iBAEb,iBAAoB,6BACpB,kBAAqB,CACpB,SAAY,4BACZ,SAAY,iBAEb,QAAW,wCACX,SAAY,EACZ,UAAa,CACZ,YAAc,GAEf,UAAa,YC1EJC,EAAmB,SAAA5B,GAC9B,IAAI4B,EAAmB5B,EAAOC,KAAI,SAACf,GAAD,OAAWA,EAAMO,YAEnD,OADa,YAAO,IAAIoC,IAAID,KAIxBE,EAAU,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACIC,MAAM,+DAAD,OACuCF,IAE9DG,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBC,OAAM,SAACC,GAAD,OAAWA,EAAMF,UALT,cACXG,EADW,yBAMVA,GANU,2CAAH,sDASHC,EAAS,uCAAG,kCAAAR,EAAA,yDACvBS,IAAUlD,SAEPmD,OAAOjD,SAASC,KAAKiD,WAAW,oBAHZ,uBAIrBF,IAAUG,OAJW,kBAKdjB,GALc,uBAOHkB,IAPG,YAOjBC,EAPiB,gCAUrBC,IACMC,EAAM,6EAAoFF,EAX3E,UAYAG,IAAMC,IAAIF,GAZV,eAYfT,EAZe,QAaXY,OACJxC,EAAYiB,EAAiBW,EAAOY,KAAKnD,QAC7CoD,aAAaC,QAAQ,aAAcC,KAAKC,UAAUhB,EAAOY,OACzDC,aAAaC,QAAQ,YAAaC,KAAKC,UAAU5C,KAEnD8B,IAAUG,OAlBW,kBAmBdL,EAAOY,KAAKnD,QAnBE,4CAAH,qDAuBhB+C,EAAc,WAClB,GAAGL,OAAOc,QAAQC,WAAaf,OAAOjD,SAASiE,SAAS,CACtD,IAAIC,EACFjB,OAAOjD,SAASmE,SAChB,KACAlB,OAAOjD,SAASoE,KAChBnB,OAAOjD,SAASiE,SAClBhB,OAAOc,QAAQC,UAAU,GAAI,GAAIE,QAEjCA,EAASjB,OAAOjD,SAASmE,SAAW,KAAOlB,OAAOjD,SAASoE,KAC3DnB,OAAOc,QAAQC,UAAU,GAAI,GAAIE,IAI/BG,EAAQ,uCAAG,WAAOC,GAAP,mBAAA/B,EAAA,6DACTgC,EAAaC,mBAAmBF,GADvB,SAEgB9B,MAAM,wEAA+E+B,GACjH9B,MAAK,SAACC,GACL,OAAOA,EAAIC,UAEZC,OAAM,SAACC,GAAD,OAAWA,KANL,wBAEP4B,EAFO,EAEPA,eAMQd,aAAaC,QAAQ,eAAgBa,GARtC,kBAURA,GAVQ,2CAAH,sDAaDrB,EAAc,uCAAG,sCAAAb,EAAA,yDACtBD,EAAcqB,aAAae,QAAQ,gBADb,KAETpC,GAFS,qCAEaD,EAAWC,GAFxB,6BAEtBqC,EAFsB,KAIxBrC,IAAeqC,EAAW9B,MAJF,kCAKpBc,aAAaiB,WAAW,gBALJ,eAMpBC,EAAe,IAAIC,gBAAgB7B,OAAOjD,SAAS+E,QAN/B,UAOPF,EAAapB,IAAI,QAPV,WAOpBa,EAPoB,yCASFd,IAAMC,IAC1B,+EAVsB,eASlBuB,EATkB,OAYhBC,EAAYD,EAAQtB,KAApBuB,QAZgB,kBAahBhC,OAAOjD,SAASC,KAAOgF,GAbP,iCAenBX,GAAQD,EAASC,IAfE,iCAiBrBhC,GAjBqB,4CAAH,qDCDZ4C,E,4MA1Db7F,MAAQ,CACNkB,OAAQ,GACRW,UAAW,GACXiE,eAAgB,GAChBC,iBAAkB,O,EAcpB5D,aAAe,SAACxB,EAAUqF,GACxB,MAA6C,EAAKhG,MAA1C+F,EAAR,EAAQA,iBAAkBD,EAA1B,EAA0BA,eACvBnF,EACD+C,IAAYN,MAAK,SAAClC,GAChB,IAKM+E,GAJQ,QAAbtF,EACC+C,EACAxC,EAAOY,QACP,SAAC1B,GAAD,OAAWA,EAAMO,WAAaA,MACIuF,MAAM,EAAGJ,GAC7C,EAAK3F,SAAS,CACZe,OAAQ+E,EACRF,iBAAkBpF,OAIxB+C,IAAYN,MAAK,SAAAlC,GACf,IAGM+E,GAHuC,QAArBF,EACtB7E,EACAA,EAAOY,QAAO,SAAA1B,GAAK,OAAIA,EAAMO,WAAaoF,MACRG,MAAM,EAAGF,GAC7C,EAAK7F,SAAS,CACZe,OAAQ+E,EACRH,eAAgBE,Q,uDAlCtB,WAAoB,IAAD,OACTF,EAAmBzF,KAAKL,MAAxB8F,eACRpC,IAAYN,MAAK,SAAClC,GAChB,EAAKf,SAAS,CAAEe,OAAQA,EAAOgF,MAAM,EAAGJ,GAAiBjE,UAAWiB,EAAiB5B,U,kCAIzF,WACEb,KAAK8F,SAAU,I,oBAgCjB,WACE,OACE,sBAAK5F,UAAU,MAAf,UACE,cAAC,EAAD,CAAYsB,UAAWxB,KAAKL,MAAM6B,UAAWM,aAAc9B,KAAK8B,eAChE,cAAC,EAAD,CAAgB2D,eAAgBzF,KAAKL,MAAM8F,eAAgB3D,aAAgB9B,KAAK8B,eAChF,cAAC,EAAD,CAAWjB,OAAQb,KAAKL,MAAMkB,gB,GArDpBF,aCGEoF,QACW,cAA7BxC,OAAOjD,SAAS0F,UAEe,UAA7BzC,OAAOjD,SAAS0F,UAEhBzC,OAAOjD,SAAS0F,SAASC,MAAM,2DCjBnC,IAYeC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBrD,MAAK,YAAkD,IAA/CsD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SFoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBlE,MAAK,SAACmE,GACLA,EAAaC,gBAEdjE,OAAM,SAACC,GACNiE,QAAQjE,MAAMA,EAAMkE,YE/G5BnB,M","file":"static/js/main.c9f42158.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\n\r\nclass Event extends Component {\r\n  state = {\r\n    active: false\r\n  }\r\n\r\n  handleToggleDetails = () => {\r\n    if(this.state.active === true){\r\n      this.setState({ active: false });\r\n    } else {\r\n      this.setState({ active: true })\r\n    }\r\n  }\r\n\r\n  render(){\r\n   let { event } = this.props;\r\n      return (\r\n        <div className='default-event-info'>\r\n          <h2 className='event-summary'>{event.summary}</h2>\r\n          <h4>{event.start.dateTime}</h4>\r\n          <p>{event.location}</p>\r\n\r\n        {this.state.active && (\r\n          <div className='event-details'>\r\n            <h2>About Event: </h2>\r\n            <a href={event.htmlLink}>See Details on Google Calendar</a>\r\n            <p>{event.description}</p>\r\n          </div>\r\n        )}\r\n          <button className='details-btn' onClick={() => this.handleToggleDetails()}>{this.state.active ? 'hide details' : 'show details'}</button>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\nexport default Event;","import React, { Component } from 'react';\r\nimport Event from './Event';\r\n\r\nclass EventList extends Component {\r\n  render(){\r\n    const { events } = this.props;\r\n    return (\r\n      <ul className=\"EventList\">\r\n        {events.map(event =>\r\n          <li key={event.id} className=\"event-li\">\r\n            <Event event={event}/>\r\n          </li>\r\n          )}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EventList;","import React, { Component } from 'react';\r\n\r\nclass CitySearch extends Component {\r\n  state = {\r\n    query: '',\r\n    suggestions: [],\r\n    showSuggestions: undefined\r\n  }\r\n\r\n  handleInputChanged = (event) => {\r\n    const value = event.target.value;\r\n    const suggestions = this.props.locations.filter(location => {\r\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n    })\r\n    this.setState({ \r\n      query: value,\r\n      suggestions,\r\n     });\r\n  }\r\n\r\n  handleItemClicked = (suggestion) => {\r\n    this.setState({\r\n      query: suggestion,\r\n      showSuggestions: false \r\n    });\r\n\r\n    this.props.updateEvents(suggestion);\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"CitySearch\">\r\n        <input \r\n          type=\"text\"\r\n          className=\"city\"\r\n          placeholder=\"search for a city\"\r\n          value={this.state.query}\r\n          onChange={this.handleInputChanged}\r\n          onFocus={() => { this.setState({ showSuggestions: true })}}\r\n          />\r\n        <ul className=\"suggestions\" style={this.state.showSuggestions ? {} : { display: 'none' }}>\r\n          {this.state.suggestions.map(suggestion => (\r\n            <li \r\n              key={suggestion}\r\n              onClick={() => this.handleItemClicked(suggestion)}>{suggestion}</li>\r\n          ))}\r\n          <li key='all' onClick={() => this.handleItemClicked(\"all\")}>\r\n            <b>See all cities</b>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CitySearch;","import React, { Component } from 'react';\r\n\r\nclass NumberOfEvents extends Component {\r\n  state = {\r\n    numOfEvents: 32,\r\n    events: []\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const value = event.target.value;\r\n    this.props.updateEvents(null, value);\r\n    this.setState({\r\n      numOfEvents: value\r\n    });\r\n  }\r\n\r\n\r\n  render(){\r\n    return (\r\n      <div>\r\n        <label>Enter Number of Events to View: </label>\r\n        <input \r\n          type=\"text\"\r\n          className=\"number-of-events\"\r\n          value={this.state.numOfEvents}\r\n          placeholder='Enter number of events to view'\r\n          onChange={this.handleChange}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default NumberOfEvents;","const mockData = [\r\n  \r\n  {\r\n    \"kind\": \"calendar#event\",\r\n    \"etag\": \"\\\"3181161784712000\\\"\",\r\n    \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\r\n    \"status\": \"confirmed\",\r\n    \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n    \"created\": \"2020-05-19T19:17:46.000Z\",\r\n    \"updated\": \"2020-05-27T12:01:32.356Z\",\r\n    \"summary\": \"Learn JavaScript\",\r\n    \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\r\n    \"location\": \"London, UK\",\r\n    \"creator\": {\r\n     \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n     \"self\": true\r\n    },\r\n    \"organizer\": {\r\n     \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n     \"self\": true\r\n    },\r\n    \"start\": {\r\n     \"dateTime\": \"2020-05-19T16:00:00+02:00\",\r\n     \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"end\": {\r\n     \"dateTime\": \"2020-05-19T17:00:00+02:00\",\r\n     \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\r\n    \"originalStartTime\": {\r\n     \"dateTime\": \"2020-05-19T16:00:00+02:00\",\r\n     \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\r\n    \"sequence\": 0,\r\n    \"reminders\": {\r\n     \"useDefault\": true\r\n    },\r\n    \"eventType\": \"default\"\r\n   },\r\n   {\r\n    \"kind\": \"calendar#event\",\r\n    \"etag\": \"\\\"3181159875584000\\\"\",\r\n    \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\r\n    \"status\": \"confirmed\",\r\n    \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n    \"created\": \"2020-05-19T19:14:30.000Z\",\r\n    \"updated\": \"2020-05-27T11:45:37.792Z\",\r\n    \"summary\": \"React is Fun\",\r\n    \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\r\n    \"location\": \"Berlin, Germany\",\r\n    \"creator\": {\r\n     \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n     \"self\": true\r\n    },\r\n    \"organizer\": {\r\n     \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n     \"self\": true\r\n    },\r\n    \"start\": {\r\n     \"dateTime\": \"2020-05-20T14:00:00+02:00\",\r\n     \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"end\": {\r\n     \"dateTime\": \"2020-05-20T15:00:00+02:00\",\r\n     \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\r\n    \"originalStartTime\": {\r\n     \"dateTime\": \"2020-05-20T14:00:00+02:00\",\r\n     \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\r\n    \"sequence\": 0,\r\n    \"reminders\": {\r\n     \"useDefault\": true\r\n    },\r\n    \"eventType\": \"default\"\r\n   },\r\n]\r\n\r\nexport { mockData };","import axios from 'axios';\r\nimport NProgress from 'nprogress';\r\nimport { mockData } from './mock-data';\r\n\r\nexport const extractLocations = events => {\r\n  var extractLocations = events.map((event) => event.location);\r\n  var locations = [...new Set(extractLocations)];\r\n  return locations;\r\n};\r\n\r\nconst checkToken = async (accessToken) => {\r\n  const result = await fetch(\r\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\r\n  )\r\n    .then((res) => res.json())\r\n    .catch((error) => error.json());\r\n  return result;\r\n};\r\n\r\nexport const getEvents = async () => {\r\n  NProgress.start();\r\n\r\n  if(window.location.href.startsWith('http://localhost')){\r\n    NProgress.done();\r\n    return mockData;\r\n  }\r\n  const token = await getAccessToken();\r\n\r\n  if(token){\r\n    removeQuery();\r\n    const url = 'https://38kl5gdtq6.execute-api.us-east-2.amazonaws.com/dev/api/get-events' + '/' + token;\r\n    const result = await axios.get(url);\r\n    if(result.data) {\r\n      var locations = extractLocations(result.data.events);\r\n      localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\r\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\r\n    }\r\n    NProgress.done();\r\n    return result.data.events;\r\n  }\r\n};\r\n\r\nconst removeQuery = () => {\r\n  if(window.history.pushState && window.location.pathname){\r\n    var newurl = \r\n      window.location.protocol + \r\n      \"//\" + \r\n      window.location.host + \r\n      window.location.pathname;\r\n    window.history.pushState(\"\", \"\", newurl);\r\n  } else {\r\n    newurl = window.location.protocol + \"//\" + window.location.host;\r\n    window.history.pushState(\"\", \"\", newurl);\r\n  }\r\n};\r\n\r\nconst getToken = async (code) => {\r\n  const encodeCode = encodeURIComponent(code);\r\n  const { access_token } = await fetch(\"https://38kl5gdtq6.execute-api.us-east-2.amazonaws.com/dev/api/token\" + \"/\" + encodeCode)\r\n    .then((res) => {\r\n      return res.json();\r\n    })\r\n    .catch((error) => error);\r\n\r\n  access_token && localStorage.setItem(\"access_token\", access_token);\r\n\r\n  return access_token;\r\n};\r\n\r\nexport const getAccessToken = async () => {\r\n  const accessToken = localStorage.getItem('access_token');\r\n  const tokenCheck = accessToken && (await checkToken(accessToken));\r\n\r\n  if(!accessToken || tokenCheck.error){\r\n    await localStorage.removeItem(\"access_token\");\r\n    const searchParams = new URLSearchParams(window.location.search);\r\n    const code = await searchParams.get(\"code\");\r\n    if(!code) {\r\n      const results = await axios.get(\r\n        \"https://38kl5gdtq6.execute-api.us-east-2.amazonaws.com/dev/api/get-auth-url\"\r\n      );\r\n      const { authUrl } = results.data;\r\n      return (window.location.href = authUrl);\r\n    }\r\n    return code && getToken(code);\r\n  }\r\n  return accessToken\r\n}","import React, { Component } from 'react';\n//import logo from './logo.svg';\nimport './App.css';\nimport './nprogress.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport { getEvents, extractLocations } from './api';\n\nclass App extends Component{\n  state = {\n    events: [],\n    locations: [],\n    numberOfEvents: 32,\n    selectedLocation: \"all\"\n  }\n\n  componentDidMount(){\n    const { numberOfEvents } = this.state;\n    getEvents().then((events) => {\n      this.setState({ events: events.slice(0, numberOfEvents), locations: extractLocations(events) });\n    });\n  }\n\n  componentWillUnmount(){\n    this.mounted = false;\n  }\n\n  updateEvents = (location, eventCount) => {\n    const { selectedLocation, numberOfEvents } = this.state;\n    if(location){\n      getEvents().then((events) => {\n        const locationEvents = \n        (location === 'all')\n        ? getEvents\n        : events.filter(\n          (event) => event.location === location);\n        const filterEvents = locationEvents.slice(0, numberOfEvents);\n        this.setState({\n          events: filterEvents,\n          selectedLocation: location \n      });\n    });\n  } else {\n    getEvents().then(events => {\n      const locationEvents = (selectedLocation === 'all')\n      ? events\n      : events.filter(event => event.location === selectedLocation);\n      const filterEvents = locationEvents.slice(0, eventCount);\n      this.setState({\n        events: filterEvents,\n        numberOfEvents: eventCount\n      });\n    });\n  }  \n}\n\n  render(){\n    return (\n      <div className=\"App\">\n        <CitySearch locations={this.state.locations} updateEvents={this.updateEvents}/>\n        <NumberOfEvents numberOfEvents={this.state.numberOfEvents} updateEvents = {this.updateEvents}/>\n        <EventList events={this.state.events}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}